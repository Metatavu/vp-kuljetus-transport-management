/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ThermalMonitorScheduleDate } from './ThermalMonitorScheduleDate';
import {
    ThermalMonitorScheduleDateFromJSON,
    ThermalMonitorScheduleDateFromJSONTyped,
    ThermalMonitorScheduleDateToJSON,
} from './ThermalMonitorScheduleDate';

/**
 * 
 * @export
 * @interface ThermalMonitorSchedulePeriod
 */
export interface ThermalMonitorSchedulePeriod {
    /**
     * 
     * @type {ThermalMonitorScheduleDate}
     * @memberof ThermalMonitorSchedulePeriod
     */
    start: ThermalMonitorScheduleDate;
    /**
     * 
     * @type {ThermalMonitorScheduleDate}
     * @memberof ThermalMonitorSchedulePeriod
     */
    end: ThermalMonitorScheduleDate;
}

/**
 * Check if a given object implements the ThermalMonitorSchedulePeriod interface.
 */
export function instanceOfThermalMonitorSchedulePeriod(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "start" in value;
    isInstance = isInstance && "end" in value;

    return isInstance;
}

export function ThermalMonitorSchedulePeriodFromJSON(json: any): ThermalMonitorSchedulePeriod {
    return ThermalMonitorSchedulePeriodFromJSONTyped(json, false);
}

export function ThermalMonitorSchedulePeriodFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThermalMonitorSchedulePeriod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'start': ThermalMonitorScheduleDateFromJSON(json['start']),
        'end': ThermalMonitorScheduleDateFromJSON(json['end']),
    };
}

export function ThermalMonitorSchedulePeriodToJSON(value?: ThermalMonitorSchedulePeriod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': ThermalMonitorScheduleDateToJSON(value.start),
        'end': ThermalMonitorScheduleDateToJSON(value.end),
    };
}

