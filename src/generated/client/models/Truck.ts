/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represent single truck
 * @export
 * @interface Truck
 */
export interface Truck {
    /**
     * 
     * @type {string}
     * @memberof Truck
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof Truck
     */
    plateNumber: string;
    /**
     * 
     * @type {string}
     * @memberof Truck
     */
    type: TruckTypeEnum;
    /**
     * Truck identification number. This is unique for each truck and should be used as a hardware identifier for this specific truck
     * @type {string}
     * @memberof Truck
     */
    vin: string;
}


/**
 * @export
 */
export const TruckTypeEnum = {
    Truck: 'TRUCK',
    SemiTruck: 'SEMI_TRUCK'
} as const;
export type TruckTypeEnum = typeof TruckTypeEnum[keyof typeof TruckTypeEnum];


/**
 * Check if a given object implements the Truck interface.
 */
export function instanceOfTruck(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "plateNumber" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "vin" in value;

    return isInstance;
}

export function TruckFromJSON(json: any): Truck {
    return TruckFromJSONTyped(json, false);
}

export function TruckFromJSONTyped(json: any, ignoreDiscriminator: boolean): Truck {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'plateNumber': json['plateNumber'],
        'type': json['type'],
        'vin': json['vin'],
    };
}

export function TruckToJSON(value?: Truck | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'plateNumber': value.plateNumber,
        'type': value.type,
        'vin': value.vin,
    };
}

