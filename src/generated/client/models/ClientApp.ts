/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClientAppMetadata } from './ClientAppMetadata';
import {
    ClientAppMetadataFromJSON,
    ClientAppMetadataFromJSONTyped,
    ClientAppMetadataToJSON,
} from './ClientAppMetadata';
import type { ClientAppStatus } from './ClientAppStatus';
import {
    ClientAppStatusFromJSON,
    ClientAppStatusFromJSONTyped,
    ClientAppStatusToJSON,
} from './ClientAppStatus';

/**
 * Represents single client app.
 * 
 * Client apps are created when a new client app publishes itself to the system. Apps will be in
 * WAITING_FOR_APPROVAL status until a manager approves them. Three months after its approval a client app will
 * again change to WAITING_FOR_APPROVAL status. The app will then need to be approved again by a manager.
 * 
 * The device ID of the client app is used together with user PIN code during authentication.
 * 
 * @export
 * @interface ClientApp
 */
export interface ClientApp {
    /**
     * 
     * @type {string}
     * @memberof ClientApp
     */
    readonly id?: string;
    /**
     * Device ID
     * @type {string}
     * @memberof ClientApp
     */
    deviceId: string;
    /**
     * Device name
     * @type {string}
     * @memberof ClientApp
     */
    name?: string;
    /**
     * 
     * @type {ClientAppStatus}
     * @memberof ClientApp
     */
    status: ClientAppStatus;
    /**
     * 
     * @type {ClientAppMetadata}
     * @memberof ClientApp
     */
    metadata: ClientAppMetadata;
    /**
     * Last time the client app has logged in to the system
     * @type {Date}
     * @memberof ClientApp
     */
    lastLoginAt?: Date;
    /**
     * Creation time
     * @type {Date}
     * @memberof ClientApp
     */
    createdAt?: Date;
    /**
     * Last modifier's ID
     * @type {string}
     * @memberof ClientApp
     */
    lastModifierId?: string;
    /**
     * Last modified time
     * @type {Date}
     * @memberof ClientApp
     */
    modifiedAt?: Date;
}

/**
 * Check if a given object implements the ClientApp interface.
 */
export function instanceOfClientApp(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "deviceId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "metadata" in value;

    return isInstance;
}

export function ClientAppFromJSON(json: any): ClientApp {
    return ClientAppFromJSONTyped(json, false);
}

export function ClientAppFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientApp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'deviceId': json['deviceId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'status': ClientAppStatusFromJSON(json['status']),
        'metadata': ClientAppMetadataFromJSON(json['metadata']),
        'lastLoginAt': !exists(json, 'lastLoginAt') ? undefined : (new Date(json['lastLoginAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function ClientAppToJSON(value?: ClientApp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deviceId': value.deviceId,
        'name': value.name,
        'status': ClientAppStatusToJSON(value.status),
        'metadata': ClientAppMetadataToJSON(value.metadata),
        'lastLoginAt': value.lastLoginAt === undefined ? undefined : (value.lastLoginAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'lastModifierId': value.lastModifierId,
        'modifiedAt': value.modifiedAt === undefined ? undefined : (value.modifiedAt.toISOString()),
    };
}

