/* tslint:disable */
/* eslint-disable */
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represent single towable
 * @export
 * @interface Towable
 */
export interface Towable {
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    plateNumber: string;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    type: TowableTypeEnum;
    /**
     * Towable identification number. This is unique for each towable and should be used as a hardware identifier for this specific towable
     * @type {string}
     * @memberof Towable
     */
    vin: string;
}


/**
 * @export
 */
export const TowableTypeEnum = {
    Trailer: 'TRAILER',
    SemiTrailer: 'SEMI_TRAILER',
    Dolly: 'DOLLY'
} as const;
export type TowableTypeEnum = typeof TowableTypeEnum[keyof typeof TowableTypeEnum];


/**
 * Check if a given object implements the Towable interface.
 */
export function instanceOfTowable(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "plateNumber" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "vin" in value;

    return isInstance;
}

export function TowableFromJSON(json: any): Towable {
    return TowableFromJSONTyped(json, false);
}

export function TowableFromJSONTyped(json: any, ignoreDiscriminator: boolean): Towable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'plateNumber': json['plateNumber'],
        'type': json['type'],
        'vin': json['vin'],
    };
}

export function TowableToJSON(value?: Towable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'plateNumber': value.plateNumber,
        'type': value.type,
        'vin': value.vin,
    };
}

