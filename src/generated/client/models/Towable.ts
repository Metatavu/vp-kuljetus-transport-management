/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represent single towable
 * @export
 * @interface Towable
 */
export interface Towable {
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    name?: string;
    /**
     * The unique IMEI of the towable, used to identify it when associating with a thermometer.
     * @type {string}
     * @memberof Towable
     */
    imei?: string;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    plateNumber: string;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    type: TowableTypeEnum;
    /**
     * Towable identification number. This is unique for each towable and should be used as a hardware identifier for this specific towable.
     * 
     * @type {string}
     * @memberof Towable
     */
    vin: string;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    readonly creatorId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Towable
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Towable
     */
    readonly lastModifierId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Towable
     */
    readonly modifiedAt?: Date;
    /**
     * Setting the archivedAt time marks the towable as archived. Towables marked as archived will not appear in list requests unless archived filter is set to true. Archived towable cannot be updated, unless archivedAt is first set to null.
     * 
     * @type {Date}
     * @memberof Towable
     */
    archivedAt?: Date;
}


/**
 * @export
 */
export const TowableTypeEnum = {
    Trailer: 'TRAILER',
    SemiTrailer: 'SEMI_TRAILER',
    Dolly: 'DOLLY'
} as const;
export type TowableTypeEnum = typeof TowableTypeEnum[keyof typeof TowableTypeEnum];


/**
 * Check if a given object implements the Towable interface.
 */
export function instanceOfTowable(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "plateNumber" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "vin" in value;

    return isInstance;
}

export function TowableFromJSON(json: any): Towable {
    return TowableFromJSONTyped(json, false);
}

export function TowableFromJSONTyped(json: any, ignoreDiscriminator: boolean): Towable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'imei': !exists(json, 'imei') ? undefined : json['imei'],
        'plateNumber': json['plateNumber'],
        'type': json['type'],
        'vin': json['vin'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
        'archivedAt': !exists(json, 'archivedAt') ? undefined : (new Date(json['archivedAt'])),
    };
}

export function TowableToJSON(value?: Towable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'imei': value.imei,
        'plateNumber': value.plateNumber,
        'type': value.type,
        'vin': value.vin,
        'archivedAt': value.archivedAt === undefined ? undefined : (value.archivedAt.toISOString()),
    };
}

