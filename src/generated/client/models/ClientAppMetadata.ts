/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Client app metadata
 * @export
 * @interface ClientAppMetadata
 */
export interface ClientAppMetadata {
    /**
     * Device OS
     * @type {string}
     * @memberof ClientAppMetadata
     */
    deviceOS?: ClientAppMetadataDeviceOSEnum;
    /**
     * Device OS version
     * @type {string}
     * @memberof ClientAppMetadata
     */
    deviceOSVersion?: string;
    /**
     * App version
     * @type {string}
     * @memberof ClientAppMetadata
     */
    appVersion?: string;
}


/**
 * @export
 */
export const ClientAppMetadataDeviceOSEnum = {
    Android: 'ANDROID'
} as const;
export type ClientAppMetadataDeviceOSEnum = typeof ClientAppMetadataDeviceOSEnum[keyof typeof ClientAppMetadataDeviceOSEnum];


/**
 * Check if a given object implements the ClientAppMetadata interface.
 */
export function instanceOfClientAppMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClientAppMetadataFromJSON(json: any): ClientAppMetadata {
    return ClientAppMetadataFromJSONTyped(json, false);
}

export function ClientAppMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientAppMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deviceOS': !exists(json, 'deviceOS') ? undefined : json['deviceOS'],
        'deviceOSVersion': !exists(json, 'deviceOSVersion') ? undefined : json['deviceOSVersion'],
        'appVersion': !exists(json, 'appVersion') ? undefined : json['appVersion'],
    };
}

export function ClientAppMetadataToJSON(value?: ClientAppMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deviceOS': value.deviceOS,
        'deviceOSVersion': value.deviceOSVersion,
        'appVersion': value.appVersion,
    };
}

