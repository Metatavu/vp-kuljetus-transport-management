/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represent single planned route for single truck driver
 * @export
 * @interface Route
 */
export interface Route {
    /**
     * 
     * @type {string}
     * @memberof Route
     */
    readonly id?: string;
    /**
     * Truck id
     * @type {string}
     * @memberof Route
     */
    truckId?: string;
    /**
     * Driver id
     * @type {string}
     * @memberof Route
     */
    driverId?: string;
    /**
     * Name of the route
     * @type {string}
     * @memberof Route
     */
    name: string;
    /**
     * Departure time of the route
     * @type {Date}
     * @memberof Route
     */
    departureTime: Date;
    /**
     * 
     * @type {string}
     * @memberof Route
     */
    readonly creatorId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Route
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Route
     */
    readonly lastModifierId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Route
     */
    readonly modifiedAt?: Date;
}

/**
 * Check if a given object implements the Route interface.
 */
export function instanceOfRoute(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "departureTime" in value;

    return isInstance;
}

export function RouteFromJSON(json: any): Route {
    return RouteFromJSONTyped(json, false);
}

export function RouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Route {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'truckId': !exists(json, 'truckId') ? undefined : json['truckId'],
        'driverId': !exists(json, 'driverId') ? undefined : json['driverId'],
        'name': json['name'],
        'departureTime': (new Date(json['departureTime'])),
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : (new Date(json['modifiedAt'])),
    };
}

export function RouteToJSON(value?: Route | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'truckId': value.truckId,
        'driverId': value.driverId,
        'name': value.name,
        'departureTime': (value.departureTime.toISOString()),
    };
}

