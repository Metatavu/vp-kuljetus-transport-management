/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WorkEventType } from './WorkEventType';
import {
    WorkEventTypeFromJSON,
    WorkEventTypeFromJSONTyped,
    WorkEventTypeToJSON,
} from './WorkEventType';

/**
 * Represents single work event
 * @export
 * @interface WorkEvent
 */
export interface WorkEvent {
    /**
     * 
     * @type {string}
     * @memberof WorkEvent
     */
    readonly id?: string;
    /**
     * Employee's ID
     * @type {string}
     * @memberof WorkEvent
     */
    employeeId: string;
    /**
     * Work event time
     * @type {Date}
     * @memberof WorkEvent
     */
    time: Date;
    /**
     * 
     * @type {WorkEventType}
     * @memberof WorkEvent
     */
    workEventType: WorkEventType;
}

/**
 * Check if a given object implements the WorkEvent interface.
 */
export function instanceOfWorkEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "employeeId" in value;
    isInstance = isInstance && "time" in value;
    isInstance = isInstance && "workEventType" in value;

    return isInstance;
}

export function WorkEventFromJSON(json: any): WorkEvent {
    return WorkEventFromJSONTyped(json, false);
}

export function WorkEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'employeeId': json['employeeId'],
        'time': (new Date(json['time'])),
        'workEventType': WorkEventTypeFromJSON(json['workEventType']),
    };
}

export function WorkEventToJSON(value?: WorkEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'employeeId': value.employeeId,
        'time': (value.time.toISOString()),
        'workEventType': WorkEventTypeToJSON(value.workEventType),
    };
}

