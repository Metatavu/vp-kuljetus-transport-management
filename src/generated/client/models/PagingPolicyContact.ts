/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * Vehicle Management Services (management)
 * Vehicle Management Services (management)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PagingPolicyType } from './PagingPolicyType';
import {
    PagingPolicyTypeFromJSON,
    PagingPolicyTypeFromJSONTyped,
    PagingPolicyTypeToJSON,
} from './PagingPolicyType';

/**
 * Represents contact for a paging policy
 * @export
 * @interface PagingPolicyContact
 */
export interface PagingPolicyContact {
    /**
     * 
     * @type {string}
     * @memberof PagingPolicyContact
     */
    readonly id?: string;
    /**
     * Human-readable name for the paging policy contact.
     * @type {string}
     * @memberof PagingPolicyContact
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PagingPolicyContact
     */
    contact: string;
    /**
     * 
     * @type {PagingPolicyType}
     * @memberof PagingPolicyContact
     */
    type: PagingPolicyType;
}

/**
 * Check if a given object implements the PagingPolicyContact interface.
 */
export function instanceOfPagingPolicyContact(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "contact" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function PagingPolicyContactFromJSON(json: any): PagingPolicyContact {
    return PagingPolicyContactFromJSONTyped(json, false);
}

export function PagingPolicyContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagingPolicyContact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'contact': json['contact'],
        'type': PagingPolicyTypeFromJSON(json['type']),
    };
}

export function PagingPolicyContactToJSON(value?: PagingPolicyContact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'contact': value.contact,
        'type': PagingPolicyTypeToJSON(value.type),
    };
}

