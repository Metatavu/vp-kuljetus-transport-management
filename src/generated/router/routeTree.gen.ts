/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./../../routes/__root";
import { Route as VehiclesImport } from "./../../routes/vehicles";
import { Route as ManagementImport } from "./../../routes/management";
import { Route as DrivePlanningImport } from "./../../routes/drive-planning";
import { Route as IndexImport } from "./../../routes/index";
import { Route as WorkingHoursIndexImport } from "./../../routes/working-hours.index";
import { Route as TerminalsIndexImport } from "./../../routes/terminals.index";
import { Route as VehiclesMapImport } from "./../../routes/vehicles.map";
import { Route as VehiclesListImport } from "./../../routes/vehicles.list";
import { Route as ManagementVehiclesImport } from "./../../routes/management.vehicles";
import { Route as ManagementTerminalsImport } from "./../../routes/management.terminals";
import { Route as ManagementHolidaysImport } from "./../../routes/management.holidays";
import { Route as ManagementEquipmentImport } from "./../../routes/management.equipment";
import { Route as ManagementEmployeesImport } from "./../../routes/management.employees";
import { Route as ManagementCustomerSitesImport } from "./../../routes/management.customer-sites";
import { Route as ManagementClientAppsImport } from "./../../routes/management.client-apps";
import { Route as DrivePlanningRoutesImport } from "./../../routes/drive-planning.routes";
import { Route as DrivePlanningFreightsImport } from "./../../routes/drive-planning.freights";
import { Route as WorkingHoursEmployeeIdWorkShiftsImport } from "./../../routes/working-hours_.$employeeId.work-shifts";
import { Route as VehiclesTruckIdDetailsImport } from "./../../routes/vehicles_.$truckId.details";
import { Route as ManagementTerminalsAddImport } from "./../../routes/management.terminals_.add";
import { Route as ManagementHolidaysAddImport } from "./../../routes/management.holidays.add";
import { Route as ManagementEquipmentAddImport } from "./../../routes/management.equipment_.add";
import { Route as ManagementEmployeesAddImport } from "./../../routes/management.employees_.add";
import { Route as ManagementCustomerSitesAddImport } from "./../../routes/management.customer-sites_.add";
import { Route as ManagementClientAppsClientAppIdImport } from "./../../routes/management.client-apps_.$clientAppId";
import { Route as DrivePlanningRoutesAddImport } from "./../../routes/drive-planning.routes.add";
import { Route as DrivePlanningFreightsAddFreightImport } from "./../../routes/drive-planning.freights.add-freight";
import { Route as ManagementTerminalsSiteIdModifyImport } from "./../../routes/management.terminals_.$siteId.modify";
import { Route as ManagementEmployeesEmployeeIdModifyImport } from "./../../routes/management.employees_.$employeeId.modify";
import { Route as ManagementCustomerSitesSiteIdModifyImport } from "./../../routes/management.customer-sites_.$siteId.modify";
import { Route as WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsImport } from "./../../routes/working-hours_.$employeeId.work-shifts.$workShiftId.details";
import { Route as ManagementEquipmentTruckTruckIdModifyImport } from "./../../routes/management.equipment_.truck.$truckId.modify";
import { Route as ManagementEquipmentTowableTowableIdModifyImport } from "./../../routes/management.equipment_.towable.$towableId.modify";

// Create/Update Routes

const VehiclesRoute = VehiclesImport.update({
  id: "/vehicles",
  path: "/vehicles",
  getParentRoute: () => rootRoute,
} as any);

const ManagementRoute = ManagementImport.update({
  id: "/management",
  path: "/management",
  getParentRoute: () => rootRoute,
} as any);

const DrivePlanningRoute = DrivePlanningImport.update({
  id: "/drive-planning",
  path: "/drive-planning",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const WorkingHoursIndexRoute = WorkingHoursIndexImport.update({
  id: "/working-hours/",
  path: "/working-hours/",
  getParentRoute: () => rootRoute,
} as any);

const TerminalsIndexRoute = TerminalsIndexImport.update({
  id: "/terminals/",
  path: "/terminals/",
  getParentRoute: () => rootRoute,
} as any);

const VehiclesMapRoute = VehiclesMapImport.update({
  id: "/map",
  path: "/map",
  getParentRoute: () => VehiclesRoute,
} as any);

const VehiclesListRoute = VehiclesListImport.update({
  id: "/list",
  path: "/list",
  getParentRoute: () => VehiclesRoute,
} as any);

const ManagementVehiclesRoute = ManagementVehiclesImport.update({
  id: "/vehicles",
  path: "/vehicles",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementTerminalsRoute = ManagementTerminalsImport.update({
  id: "/terminals",
  path: "/terminals",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementHolidaysRoute = ManagementHolidaysImport.update({
  id: "/holidays",
  path: "/holidays",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementEquipmentRoute = ManagementEquipmentImport.update({
  id: "/equipment",
  path: "/equipment",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementEmployeesRoute = ManagementEmployeesImport.update({
  id: "/employees",
  path: "/employees",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementCustomerSitesRoute = ManagementCustomerSitesImport.update({
  id: "/customer-sites",
  path: "/customer-sites",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementClientAppsRoute = ManagementClientAppsImport.update({
  id: "/client-apps",
  path: "/client-apps",
  getParentRoute: () => ManagementRoute,
} as any);

const DrivePlanningRoutesRoute = DrivePlanningRoutesImport.update({
  id: "/routes",
  path: "/routes",
  getParentRoute: () => DrivePlanningRoute,
} as any);

const DrivePlanningFreightsRoute = DrivePlanningFreightsImport.update({
  id: "/freights",
  path: "/freights",
  getParentRoute: () => DrivePlanningRoute,
} as any);

const WorkingHoursEmployeeIdWorkShiftsRoute =
  WorkingHoursEmployeeIdWorkShiftsImport.update({
    id: "/working-hours_/$employeeId/work-shifts",
    path: "/working-hours/$employeeId/work-shifts",
    getParentRoute: () => rootRoute,
  } as any);

const VehiclesTruckIdDetailsRoute = VehiclesTruckIdDetailsImport.update({
  id: "/vehicles_/$truckId/details",
  path: "/vehicles/$truckId/details",
  getParentRoute: () => rootRoute,
} as any);

const ManagementTerminalsAddRoute = ManagementTerminalsAddImport.update({
  id: "/terminals_/add",
  path: "/terminals/add",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementHolidaysAddRoute = ManagementHolidaysAddImport.update({
  id: "/add",
  path: "/add",
  getParentRoute: () => ManagementHolidaysRoute,
} as any);

const ManagementEquipmentAddRoute = ManagementEquipmentAddImport.update({
  id: "/equipment_/add",
  path: "/equipment/add",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementEmployeesAddRoute = ManagementEmployeesAddImport.update({
  id: "/employees_/add",
  path: "/employees/add",
  getParentRoute: () => ManagementRoute,
} as any);

const ManagementCustomerSitesAddRoute = ManagementCustomerSitesAddImport.update(
  {
    id: "/customer-sites_/add",
    path: "/customer-sites/add",
    getParentRoute: () => ManagementRoute,
  } as any,
);

const ManagementClientAppsClientAppIdRoute =
  ManagementClientAppsClientAppIdImport.update({
    id: "/client-apps_/$clientAppId",
    path: "/client-apps/$clientAppId",
    getParentRoute: () => ManagementRoute,
  } as any);

const DrivePlanningRoutesAddRoute = DrivePlanningRoutesAddImport.update({
  id: "/add",
  path: "/add",
  getParentRoute: () => DrivePlanningRoutesRoute,
} as any);

const DrivePlanningFreightsAddFreightRoute =
  DrivePlanningFreightsAddFreightImport.update({
    id: "/add-freight",
    path: "/add-freight",
    getParentRoute: () => DrivePlanningFreightsRoute,
  } as any);

const ManagementTerminalsSiteIdModifyRoute =
  ManagementTerminalsSiteIdModifyImport.update({
    id: "/terminals_/$siteId/modify",
    path: "/terminals/$siteId/modify",
    getParentRoute: () => ManagementRoute,
  } as any);

const ManagementEmployeesEmployeeIdModifyRoute =
  ManagementEmployeesEmployeeIdModifyImport.update({
    id: "/employees_/$employeeId/modify",
    path: "/employees/$employeeId/modify",
    getParentRoute: () => ManagementRoute,
  } as any);

const ManagementCustomerSitesSiteIdModifyRoute =
  ManagementCustomerSitesSiteIdModifyImport.update({
    id: "/customer-sites_/$siteId/modify",
    path: "/customer-sites/$siteId/modify",
    getParentRoute: () => ManagementRoute,
  } as any);

const WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute =
  WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsImport.update({
    id: "/$workShiftId/details",
    path: "/$workShiftId/details",
    getParentRoute: () => WorkingHoursEmployeeIdWorkShiftsRoute,
  } as any);

const ManagementEquipmentTruckTruckIdModifyRoute =
  ManagementEquipmentTruckTruckIdModifyImport.update({
    id: "/equipment_/truck/$truckId/modify",
    path: "/equipment/truck/$truckId/modify",
    getParentRoute: () => ManagementRoute,
  } as any);

const ManagementEquipmentTowableTowableIdModifyRoute =
  ManagementEquipmentTowableTowableIdModifyImport.update({
    id: "/equipment_/towable/$towableId/modify",
    path: "/equipment/towable/$towableId/modify",
    getParentRoute: () => ManagementRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/drive-planning": {
      id: "/drive-planning";
      path: "/drive-planning";
      fullPath: "/drive-planning";
      preLoaderRoute: typeof DrivePlanningImport;
      parentRoute: typeof rootRoute;
    };
    "/management": {
      id: "/management";
      path: "/management";
      fullPath: "/management";
      preLoaderRoute: typeof ManagementImport;
      parentRoute: typeof rootRoute;
    };
    "/vehicles": {
      id: "/vehicles";
      path: "/vehicles";
      fullPath: "/vehicles";
      preLoaderRoute: typeof VehiclesImport;
      parentRoute: typeof rootRoute;
    };
    "/drive-planning/freights": {
      id: "/drive-planning/freights";
      path: "/freights";
      fullPath: "/drive-planning/freights";
      preLoaderRoute: typeof DrivePlanningFreightsImport;
      parentRoute: typeof DrivePlanningImport;
    };
    "/drive-planning/routes": {
      id: "/drive-planning/routes";
      path: "/routes";
      fullPath: "/drive-planning/routes";
      preLoaderRoute: typeof DrivePlanningRoutesImport;
      parentRoute: typeof DrivePlanningImport;
    };
    "/management/client-apps": {
      id: "/management/client-apps";
      path: "/client-apps";
      fullPath: "/management/client-apps";
      preLoaderRoute: typeof ManagementClientAppsImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/customer-sites": {
      id: "/management/customer-sites";
      path: "/customer-sites";
      fullPath: "/management/customer-sites";
      preLoaderRoute: typeof ManagementCustomerSitesImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/employees": {
      id: "/management/employees";
      path: "/employees";
      fullPath: "/management/employees";
      preLoaderRoute: typeof ManagementEmployeesImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/equipment": {
      id: "/management/equipment";
      path: "/equipment";
      fullPath: "/management/equipment";
      preLoaderRoute: typeof ManagementEquipmentImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/holidays": {
      id: "/management/holidays";
      path: "/holidays";
      fullPath: "/management/holidays";
      preLoaderRoute: typeof ManagementHolidaysImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/terminals": {
      id: "/management/terminals";
      path: "/terminals";
      fullPath: "/management/terminals";
      preLoaderRoute: typeof ManagementTerminalsImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/vehicles": {
      id: "/management/vehicles";
      path: "/vehicles";
      fullPath: "/management/vehicles";
      preLoaderRoute: typeof ManagementVehiclesImport;
      parentRoute: typeof ManagementImport;
    };
    "/vehicles/list": {
      id: "/vehicles/list";
      path: "/list";
      fullPath: "/vehicles/list";
      preLoaderRoute: typeof VehiclesListImport;
      parentRoute: typeof VehiclesImport;
    };
    "/vehicles/map": {
      id: "/vehicles/map";
      path: "/map";
      fullPath: "/vehicles/map";
      preLoaderRoute: typeof VehiclesMapImport;
      parentRoute: typeof VehiclesImport;
    };
    "/terminals/": {
      id: "/terminals/";
      path: "/terminals";
      fullPath: "/terminals";
      preLoaderRoute: typeof TerminalsIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/working-hours/": {
      id: "/working-hours/";
      path: "/working-hours";
      fullPath: "/working-hours";
      preLoaderRoute: typeof WorkingHoursIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/drive-planning/freights/add-freight": {
      id: "/drive-planning/freights/add-freight";
      path: "/add-freight";
      fullPath: "/drive-planning/freights/add-freight";
      preLoaderRoute: typeof DrivePlanningFreightsAddFreightImport;
      parentRoute: typeof DrivePlanningFreightsImport;
    };
    "/drive-planning/routes/add": {
      id: "/drive-planning/routes/add";
      path: "/add";
      fullPath: "/drive-planning/routes/add";
      preLoaderRoute: typeof DrivePlanningRoutesAddImport;
      parentRoute: typeof DrivePlanningRoutesImport;
    };
    "/management/client-apps_/$clientAppId": {
      id: "/management/client-apps_/$clientAppId";
      path: "/client-apps/$clientAppId";
      fullPath: "/management/client-apps/$clientAppId";
      preLoaderRoute: typeof ManagementClientAppsClientAppIdImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/customer-sites_/add": {
      id: "/management/customer-sites_/add";
      path: "/customer-sites/add";
      fullPath: "/management/customer-sites/add";
      preLoaderRoute: typeof ManagementCustomerSitesAddImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/employees_/add": {
      id: "/management/employees_/add";
      path: "/employees/add";
      fullPath: "/management/employees/add";
      preLoaderRoute: typeof ManagementEmployeesAddImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/equipment_/add": {
      id: "/management/equipment_/add";
      path: "/equipment/add";
      fullPath: "/management/equipment/add";
      preLoaderRoute: typeof ManagementEquipmentAddImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/holidays/add": {
      id: "/management/holidays/add";
      path: "/add";
      fullPath: "/management/holidays/add";
      preLoaderRoute: typeof ManagementHolidaysAddImport;
      parentRoute: typeof ManagementHolidaysImport;
    };
    "/management/terminals_/add": {
      id: "/management/terminals_/add";
      path: "/terminals/add";
      fullPath: "/management/terminals/add";
      preLoaderRoute: typeof ManagementTerminalsAddImport;
      parentRoute: typeof ManagementImport;
    };
    "/vehicles_/$truckId/details": {
      id: "/vehicles_/$truckId/details";
      path: "/vehicles/$truckId/details";
      fullPath: "/vehicles/$truckId/details";
      preLoaderRoute: typeof VehiclesTruckIdDetailsImport;
      parentRoute: typeof rootRoute;
    };
    "/working-hours_/$employeeId/work-shifts": {
      id: "/working-hours_/$employeeId/work-shifts";
      path: "/working-hours/$employeeId/work-shifts";
      fullPath: "/working-hours/$employeeId/work-shifts";
      preLoaderRoute: typeof WorkingHoursEmployeeIdWorkShiftsImport;
      parentRoute: typeof rootRoute;
    };
    "/management/customer-sites_/$siteId/modify": {
      id: "/management/customer-sites_/$siteId/modify";
      path: "/customer-sites/$siteId/modify";
      fullPath: "/management/customer-sites/$siteId/modify";
      preLoaderRoute: typeof ManagementCustomerSitesSiteIdModifyImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/employees_/$employeeId/modify": {
      id: "/management/employees_/$employeeId/modify";
      path: "/employees/$employeeId/modify";
      fullPath: "/management/employees/$employeeId/modify";
      preLoaderRoute: typeof ManagementEmployeesEmployeeIdModifyImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/terminals_/$siteId/modify": {
      id: "/management/terminals_/$siteId/modify";
      path: "/terminals/$siteId/modify";
      fullPath: "/management/terminals/$siteId/modify";
      preLoaderRoute: typeof ManagementTerminalsSiteIdModifyImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/equipment_/towable/$towableId/modify": {
      id: "/management/equipment_/towable/$towableId/modify";
      path: "/equipment/towable/$towableId/modify";
      fullPath: "/management/equipment/towable/$towableId/modify";
      preLoaderRoute: typeof ManagementEquipmentTowableTowableIdModifyImport;
      parentRoute: typeof ManagementImport;
    };
    "/management/equipment_/truck/$truckId/modify": {
      id: "/management/equipment_/truck/$truckId/modify";
      path: "/equipment/truck/$truckId/modify";
      fullPath: "/management/equipment/truck/$truckId/modify";
      preLoaderRoute: typeof ManagementEquipmentTruckTruckIdModifyImport;
      parentRoute: typeof ManagementImport;
    };
    "/working-hours_/$employeeId/work-shifts/$workShiftId/details": {
      id: "/working-hours_/$employeeId/work-shifts/$workShiftId/details";
      path: "/$workShiftId/details";
      fullPath: "/working-hours/$employeeId/work-shifts/$workShiftId/details";
      preLoaderRoute: typeof WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsImport;
      parentRoute: typeof WorkingHoursEmployeeIdWorkShiftsImport;
    };
  }
}

// Create and export the route tree

interface DrivePlanningFreightsRouteChildren {
  DrivePlanningFreightsAddFreightRoute: typeof DrivePlanningFreightsAddFreightRoute;
}

const DrivePlanningFreightsRouteChildren: DrivePlanningFreightsRouteChildren = {
  DrivePlanningFreightsAddFreightRoute: DrivePlanningFreightsAddFreightRoute,
};

const DrivePlanningFreightsRouteWithChildren =
  DrivePlanningFreightsRoute._addFileChildren(
    DrivePlanningFreightsRouteChildren,
  );

interface DrivePlanningRoutesRouteChildren {
  DrivePlanningRoutesAddRoute: typeof DrivePlanningRoutesAddRoute;
}

const DrivePlanningRoutesRouteChildren: DrivePlanningRoutesRouteChildren = {
  DrivePlanningRoutesAddRoute: DrivePlanningRoutesAddRoute,
};

const DrivePlanningRoutesRouteWithChildren =
  DrivePlanningRoutesRoute._addFileChildren(DrivePlanningRoutesRouteChildren);

interface DrivePlanningRouteChildren {
  DrivePlanningFreightsRoute: typeof DrivePlanningFreightsRouteWithChildren;
  DrivePlanningRoutesRoute: typeof DrivePlanningRoutesRouteWithChildren;
}

const DrivePlanningRouteChildren: DrivePlanningRouteChildren = {
  DrivePlanningFreightsRoute: DrivePlanningFreightsRouteWithChildren,
  DrivePlanningRoutesRoute: DrivePlanningRoutesRouteWithChildren,
};

const DrivePlanningRouteWithChildren = DrivePlanningRoute._addFileChildren(
  DrivePlanningRouteChildren,
);

interface ManagementHolidaysRouteChildren {
  ManagementHolidaysAddRoute: typeof ManagementHolidaysAddRoute;
}

const ManagementHolidaysRouteChildren: ManagementHolidaysRouteChildren = {
  ManagementHolidaysAddRoute: ManagementHolidaysAddRoute,
};

const ManagementHolidaysRouteWithChildren =
  ManagementHolidaysRoute._addFileChildren(ManagementHolidaysRouteChildren);

interface ManagementRouteChildren {
  ManagementClientAppsRoute: typeof ManagementClientAppsRoute;
  ManagementCustomerSitesRoute: typeof ManagementCustomerSitesRoute;
  ManagementEmployeesRoute: typeof ManagementEmployeesRoute;
  ManagementEquipmentRoute: typeof ManagementEquipmentRoute;
  ManagementHolidaysRoute: typeof ManagementHolidaysRouteWithChildren;
  ManagementTerminalsRoute: typeof ManagementTerminalsRoute;
  ManagementVehiclesRoute: typeof ManagementVehiclesRoute;
  ManagementClientAppsClientAppIdRoute: typeof ManagementClientAppsClientAppIdRoute;
  ManagementCustomerSitesAddRoute: typeof ManagementCustomerSitesAddRoute;
  ManagementEmployeesAddRoute: typeof ManagementEmployeesAddRoute;
  ManagementEquipmentAddRoute: typeof ManagementEquipmentAddRoute;
  ManagementTerminalsAddRoute: typeof ManagementTerminalsAddRoute;
  ManagementCustomerSitesSiteIdModifyRoute: typeof ManagementCustomerSitesSiteIdModifyRoute;
  ManagementEmployeesEmployeeIdModifyRoute: typeof ManagementEmployeesEmployeeIdModifyRoute;
  ManagementTerminalsSiteIdModifyRoute: typeof ManagementTerminalsSiteIdModifyRoute;
  ManagementEquipmentTowableTowableIdModifyRoute: typeof ManagementEquipmentTowableTowableIdModifyRoute;
  ManagementEquipmentTruckTruckIdModifyRoute: typeof ManagementEquipmentTruckTruckIdModifyRoute;
}

const ManagementRouteChildren: ManagementRouteChildren = {
  ManagementClientAppsRoute: ManagementClientAppsRoute,
  ManagementCustomerSitesRoute: ManagementCustomerSitesRoute,
  ManagementEmployeesRoute: ManagementEmployeesRoute,
  ManagementEquipmentRoute: ManagementEquipmentRoute,
  ManagementHolidaysRoute: ManagementHolidaysRouteWithChildren,
  ManagementTerminalsRoute: ManagementTerminalsRoute,
  ManagementVehiclesRoute: ManagementVehiclesRoute,
  ManagementClientAppsClientAppIdRoute: ManagementClientAppsClientAppIdRoute,
  ManagementCustomerSitesAddRoute: ManagementCustomerSitesAddRoute,
  ManagementEmployeesAddRoute: ManagementEmployeesAddRoute,
  ManagementEquipmentAddRoute: ManagementEquipmentAddRoute,
  ManagementTerminalsAddRoute: ManagementTerminalsAddRoute,
  ManagementCustomerSitesSiteIdModifyRoute:
    ManagementCustomerSitesSiteIdModifyRoute,
  ManagementEmployeesEmployeeIdModifyRoute:
    ManagementEmployeesEmployeeIdModifyRoute,
  ManagementTerminalsSiteIdModifyRoute: ManagementTerminalsSiteIdModifyRoute,
  ManagementEquipmentTowableTowableIdModifyRoute:
    ManagementEquipmentTowableTowableIdModifyRoute,
  ManagementEquipmentTruckTruckIdModifyRoute:
    ManagementEquipmentTruckTruckIdModifyRoute,
};

const ManagementRouteWithChildren = ManagementRoute._addFileChildren(
  ManagementRouteChildren,
);

interface VehiclesRouteChildren {
  VehiclesListRoute: typeof VehiclesListRoute;
  VehiclesMapRoute: typeof VehiclesMapRoute;
}

const VehiclesRouteChildren: VehiclesRouteChildren = {
  VehiclesListRoute: VehiclesListRoute,
  VehiclesMapRoute: VehiclesMapRoute,
};

const VehiclesRouteWithChildren = VehiclesRoute._addFileChildren(
  VehiclesRouteChildren,
);

interface WorkingHoursEmployeeIdWorkShiftsRouteChildren {
  WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute: typeof WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute;
}

const WorkingHoursEmployeeIdWorkShiftsRouteChildren: WorkingHoursEmployeeIdWorkShiftsRouteChildren =
  {
    WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute:
      WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute,
  };

const WorkingHoursEmployeeIdWorkShiftsRouteWithChildren =
  WorkingHoursEmployeeIdWorkShiftsRoute._addFileChildren(
    WorkingHoursEmployeeIdWorkShiftsRouteChildren,
  );

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/drive-planning": typeof DrivePlanningRouteWithChildren;
  "/management": typeof ManagementRouteWithChildren;
  "/vehicles": typeof VehiclesRouteWithChildren;
  "/drive-planning/freights": typeof DrivePlanningFreightsRouteWithChildren;
  "/drive-planning/routes": typeof DrivePlanningRoutesRouteWithChildren;
  "/management/client-apps": typeof ManagementClientAppsRoute;
  "/management/customer-sites": typeof ManagementCustomerSitesRoute;
  "/management/employees": typeof ManagementEmployeesRoute;
  "/management/equipment": typeof ManagementEquipmentRoute;
  "/management/holidays": typeof ManagementHolidaysRouteWithChildren;
  "/management/terminals": typeof ManagementTerminalsRoute;
  "/management/vehicles": typeof ManagementVehiclesRoute;
  "/vehicles/list": typeof VehiclesListRoute;
  "/vehicles/map": typeof VehiclesMapRoute;
  "/terminals": typeof TerminalsIndexRoute;
  "/working-hours": typeof WorkingHoursIndexRoute;
  "/drive-planning/freights/add-freight": typeof DrivePlanningFreightsAddFreightRoute;
  "/drive-planning/routes/add": typeof DrivePlanningRoutesAddRoute;
  "/management/client-apps/$clientAppId": typeof ManagementClientAppsClientAppIdRoute;
  "/management/customer-sites/add": typeof ManagementCustomerSitesAddRoute;
  "/management/employees/add": typeof ManagementEmployeesAddRoute;
  "/management/equipment/add": typeof ManagementEquipmentAddRoute;
  "/management/holidays/add": typeof ManagementHolidaysAddRoute;
  "/management/terminals/add": typeof ManagementTerminalsAddRoute;
  "/vehicles/$truckId/details": typeof VehiclesTruckIdDetailsRoute;
  "/working-hours/$employeeId/work-shifts": typeof WorkingHoursEmployeeIdWorkShiftsRouteWithChildren;
  "/management/customer-sites/$siteId/modify": typeof ManagementCustomerSitesSiteIdModifyRoute;
  "/management/employees/$employeeId/modify": typeof ManagementEmployeesEmployeeIdModifyRoute;
  "/management/terminals/$siteId/modify": typeof ManagementTerminalsSiteIdModifyRoute;
  "/management/equipment/towable/$towableId/modify": typeof ManagementEquipmentTowableTowableIdModifyRoute;
  "/management/equipment/truck/$truckId/modify": typeof ManagementEquipmentTruckTruckIdModifyRoute;
  "/working-hours/$employeeId/work-shifts/$workShiftId/details": typeof WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/drive-planning": typeof DrivePlanningRouteWithChildren;
  "/management": typeof ManagementRouteWithChildren;
  "/vehicles": typeof VehiclesRouteWithChildren;
  "/drive-planning/freights": typeof DrivePlanningFreightsRouteWithChildren;
  "/drive-planning/routes": typeof DrivePlanningRoutesRouteWithChildren;
  "/management/client-apps": typeof ManagementClientAppsRoute;
  "/management/customer-sites": typeof ManagementCustomerSitesRoute;
  "/management/employees": typeof ManagementEmployeesRoute;
  "/management/equipment": typeof ManagementEquipmentRoute;
  "/management/holidays": typeof ManagementHolidaysRouteWithChildren;
  "/management/terminals": typeof ManagementTerminalsRoute;
  "/management/vehicles": typeof ManagementVehiclesRoute;
  "/vehicles/list": typeof VehiclesListRoute;
  "/vehicles/map": typeof VehiclesMapRoute;
  "/terminals": typeof TerminalsIndexRoute;
  "/working-hours": typeof WorkingHoursIndexRoute;
  "/drive-planning/freights/add-freight": typeof DrivePlanningFreightsAddFreightRoute;
  "/drive-planning/routes/add": typeof DrivePlanningRoutesAddRoute;
  "/management/client-apps/$clientAppId": typeof ManagementClientAppsClientAppIdRoute;
  "/management/customer-sites/add": typeof ManagementCustomerSitesAddRoute;
  "/management/employees/add": typeof ManagementEmployeesAddRoute;
  "/management/equipment/add": typeof ManagementEquipmentAddRoute;
  "/management/holidays/add": typeof ManagementHolidaysAddRoute;
  "/management/terminals/add": typeof ManagementTerminalsAddRoute;
  "/vehicles/$truckId/details": typeof VehiclesTruckIdDetailsRoute;
  "/working-hours/$employeeId/work-shifts": typeof WorkingHoursEmployeeIdWorkShiftsRouteWithChildren;
  "/management/customer-sites/$siteId/modify": typeof ManagementCustomerSitesSiteIdModifyRoute;
  "/management/employees/$employeeId/modify": typeof ManagementEmployeesEmployeeIdModifyRoute;
  "/management/terminals/$siteId/modify": typeof ManagementTerminalsSiteIdModifyRoute;
  "/management/equipment/towable/$towableId/modify": typeof ManagementEquipmentTowableTowableIdModifyRoute;
  "/management/equipment/truck/$truckId/modify": typeof ManagementEquipmentTruckTruckIdModifyRoute;
  "/working-hours/$employeeId/work-shifts/$workShiftId/details": typeof WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/drive-planning": typeof DrivePlanningRouteWithChildren;
  "/management": typeof ManagementRouteWithChildren;
  "/vehicles": typeof VehiclesRouteWithChildren;
  "/drive-planning/freights": typeof DrivePlanningFreightsRouteWithChildren;
  "/drive-planning/routes": typeof DrivePlanningRoutesRouteWithChildren;
  "/management/client-apps": typeof ManagementClientAppsRoute;
  "/management/customer-sites": typeof ManagementCustomerSitesRoute;
  "/management/employees": typeof ManagementEmployeesRoute;
  "/management/equipment": typeof ManagementEquipmentRoute;
  "/management/holidays": typeof ManagementHolidaysRouteWithChildren;
  "/management/terminals": typeof ManagementTerminalsRoute;
  "/management/vehicles": typeof ManagementVehiclesRoute;
  "/vehicles/list": typeof VehiclesListRoute;
  "/vehicles/map": typeof VehiclesMapRoute;
  "/terminals/": typeof TerminalsIndexRoute;
  "/working-hours/": typeof WorkingHoursIndexRoute;
  "/drive-planning/freights/add-freight": typeof DrivePlanningFreightsAddFreightRoute;
  "/drive-planning/routes/add": typeof DrivePlanningRoutesAddRoute;
  "/management/client-apps_/$clientAppId": typeof ManagementClientAppsClientAppIdRoute;
  "/management/customer-sites_/add": typeof ManagementCustomerSitesAddRoute;
  "/management/employees_/add": typeof ManagementEmployeesAddRoute;
  "/management/equipment_/add": typeof ManagementEquipmentAddRoute;
  "/management/holidays/add": typeof ManagementHolidaysAddRoute;
  "/management/terminals_/add": typeof ManagementTerminalsAddRoute;
  "/vehicles_/$truckId/details": typeof VehiclesTruckIdDetailsRoute;
  "/working-hours_/$employeeId/work-shifts": typeof WorkingHoursEmployeeIdWorkShiftsRouteWithChildren;
  "/management/customer-sites_/$siteId/modify": typeof ManagementCustomerSitesSiteIdModifyRoute;
  "/management/employees_/$employeeId/modify": typeof ManagementEmployeesEmployeeIdModifyRoute;
  "/management/terminals_/$siteId/modify": typeof ManagementTerminalsSiteIdModifyRoute;
  "/management/equipment_/towable/$towableId/modify": typeof ManagementEquipmentTowableTowableIdModifyRoute;
  "/management/equipment_/truck/$truckId/modify": typeof ManagementEquipmentTruckTruckIdModifyRoute;
  "/working-hours_/$employeeId/work-shifts/$workShiftId/details": typeof WorkingHoursEmployeeIdWorkShiftsWorkShiftIdDetailsRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/drive-planning"
    | "/management"
    | "/vehicles"
    | "/drive-planning/freights"
    | "/drive-planning/routes"
    | "/management/client-apps"
    | "/management/customer-sites"
    | "/management/employees"
    | "/management/equipment"
    | "/management/holidays"
    | "/management/terminals"
    | "/management/vehicles"
    | "/vehicles/list"
    | "/vehicles/map"
    | "/terminals"
    | "/working-hours"
    | "/drive-planning/freights/add-freight"
    | "/drive-planning/routes/add"
    | "/management/client-apps/$clientAppId"
    | "/management/customer-sites/add"
    | "/management/employees/add"
    | "/management/equipment/add"
    | "/management/holidays/add"
    | "/management/terminals/add"
    | "/vehicles/$truckId/details"
    | "/working-hours/$employeeId/work-shifts"
    | "/management/customer-sites/$siteId/modify"
    | "/management/employees/$employeeId/modify"
    | "/management/terminals/$siteId/modify"
    | "/management/equipment/towable/$towableId/modify"
    | "/management/equipment/truck/$truckId/modify"
    | "/working-hours/$employeeId/work-shifts/$workShiftId/details";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/drive-planning"
    | "/management"
    | "/vehicles"
    | "/drive-planning/freights"
    | "/drive-planning/routes"
    | "/management/client-apps"
    | "/management/customer-sites"
    | "/management/employees"
    | "/management/equipment"
    | "/management/holidays"
    | "/management/terminals"
    | "/management/vehicles"
    | "/vehicles/list"
    | "/vehicles/map"
    | "/terminals"
    | "/working-hours"
    | "/drive-planning/freights/add-freight"
    | "/drive-planning/routes/add"
    | "/management/client-apps/$clientAppId"
    | "/management/customer-sites/add"
    | "/management/employees/add"
    | "/management/equipment/add"
    | "/management/holidays/add"
    | "/management/terminals/add"
    | "/vehicles/$truckId/details"
    | "/working-hours/$employeeId/work-shifts"
    | "/management/customer-sites/$siteId/modify"
    | "/management/employees/$employeeId/modify"
    | "/management/terminals/$siteId/modify"
    | "/management/equipment/towable/$towableId/modify"
    | "/management/equipment/truck/$truckId/modify"
    | "/working-hours/$employeeId/work-shifts/$workShiftId/details";
  id:
    | "__root__"
    | "/"
    | "/drive-planning"
    | "/management"
    | "/vehicles"
    | "/drive-planning/freights"
    | "/drive-planning/routes"
    | "/management/client-apps"
    | "/management/customer-sites"
    | "/management/employees"
    | "/management/equipment"
    | "/management/holidays"
    | "/management/terminals"
    | "/management/vehicles"
    | "/vehicles/list"
    | "/vehicles/map"
    | "/terminals/"
    | "/working-hours/"
    | "/drive-planning/freights/add-freight"
    | "/drive-planning/routes/add"
    | "/management/client-apps_/$clientAppId"
    | "/management/customer-sites_/add"
    | "/management/employees_/add"
    | "/management/equipment_/add"
    | "/management/holidays/add"
    | "/management/terminals_/add"
    | "/vehicles_/$truckId/details"
    | "/working-hours_/$employeeId/work-shifts"
    | "/management/customer-sites_/$siteId/modify"
    | "/management/employees_/$employeeId/modify"
    | "/management/terminals_/$siteId/modify"
    | "/management/equipment_/towable/$towableId/modify"
    | "/management/equipment_/truck/$truckId/modify"
    | "/working-hours_/$employeeId/work-shifts/$workShiftId/details";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  DrivePlanningRoute: typeof DrivePlanningRouteWithChildren;
  ManagementRoute: typeof ManagementRouteWithChildren;
  VehiclesRoute: typeof VehiclesRouteWithChildren;
  TerminalsIndexRoute: typeof TerminalsIndexRoute;
  WorkingHoursIndexRoute: typeof WorkingHoursIndexRoute;
  VehiclesTruckIdDetailsRoute: typeof VehiclesTruckIdDetailsRoute;
  WorkingHoursEmployeeIdWorkShiftsRoute: typeof WorkingHoursEmployeeIdWorkShiftsRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DrivePlanningRoute: DrivePlanningRouteWithChildren,
  ManagementRoute: ManagementRouteWithChildren,
  VehiclesRoute: VehiclesRouteWithChildren,
  TerminalsIndexRoute: TerminalsIndexRoute,
  WorkingHoursIndexRoute: WorkingHoursIndexRoute,
  VehiclesTruckIdDetailsRoute: VehiclesTruckIdDetailsRoute,
  WorkingHoursEmployeeIdWorkShiftsRoute:
    WorkingHoursEmployeeIdWorkShiftsRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/drive-planning",
        "/management",
        "/vehicles",
        "/terminals/",
        "/working-hours/",
        "/vehicles_/$truckId/details",
        "/working-hours_/$employeeId/work-shifts"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/drive-planning": {
      "filePath": "drive-planning.tsx",
      "children": [
        "/drive-planning/freights",
        "/drive-planning/routes"
      ]
    },
    "/management": {
      "filePath": "management.tsx",
      "children": [
        "/management/client-apps",
        "/management/customer-sites",
        "/management/employees",
        "/management/equipment",
        "/management/holidays",
        "/management/terminals",
        "/management/vehicles",
        "/management/client-apps_/$clientAppId",
        "/management/customer-sites_/add",
        "/management/employees_/add",
        "/management/equipment_/add",
        "/management/terminals_/add",
        "/management/customer-sites_/$siteId/modify",
        "/management/employees_/$employeeId/modify",
        "/management/terminals_/$siteId/modify",
        "/management/equipment_/towable/$towableId/modify",
        "/management/equipment_/truck/$truckId/modify"
      ]
    },
    "/vehicles": {
      "filePath": "vehicles.tsx",
      "children": [
        "/vehicles/list",
        "/vehicles/map"
      ]
    },
    "/drive-planning/freights": {
      "filePath": "drive-planning.freights.tsx",
      "parent": "/drive-planning",
      "children": [
        "/drive-planning/freights/add-freight"
      ]
    },
    "/drive-planning/routes": {
      "filePath": "drive-planning.routes.tsx",
      "parent": "/drive-planning",
      "children": [
        "/drive-planning/routes/add"
      ]
    },
    "/management/client-apps": {
      "filePath": "management.client-apps.tsx",
      "parent": "/management"
    },
    "/management/customer-sites": {
      "filePath": "management.customer-sites.tsx",
      "parent": "/management"
    },
    "/management/employees": {
      "filePath": "management.employees.tsx",
      "parent": "/management"
    },
    "/management/equipment": {
      "filePath": "management.equipment.tsx",
      "parent": "/management"
    },
    "/management/holidays": {
      "filePath": "management.holidays.tsx",
      "parent": "/management",
      "children": [
        "/management/holidays/add"
      ]
    },
    "/management/terminals": {
      "filePath": "management.terminals.tsx",
      "parent": "/management"
    },
    "/management/vehicles": {
      "filePath": "management.vehicles.tsx",
      "parent": "/management"
    },
    "/vehicles/list": {
      "filePath": "vehicles.list.tsx",
      "parent": "/vehicles"
    },
    "/vehicles/map": {
      "filePath": "vehicles.map.tsx",
      "parent": "/vehicles"
    },
    "/terminals/": {
      "filePath": "terminals.index.tsx"
    },
    "/working-hours/": {
      "filePath": "working-hours.index.tsx"
    },
    "/drive-planning/freights/add-freight": {
      "filePath": "drive-planning.freights.add-freight.tsx",
      "parent": "/drive-planning/freights"
    },
    "/drive-planning/routes/add": {
      "filePath": "drive-planning.routes.add.tsx",
      "parent": "/drive-planning/routes"
    },
    "/management/client-apps_/$clientAppId": {
      "filePath": "management.client-apps_.$clientAppId.tsx",
      "parent": "/management"
    },
    "/management/customer-sites_/add": {
      "filePath": "management.customer-sites_.add.tsx",
      "parent": "/management"
    },
    "/management/employees_/add": {
      "filePath": "management.employees_.add.tsx",
      "parent": "/management"
    },
    "/management/equipment_/add": {
      "filePath": "management.equipment_.add.tsx",
      "parent": "/management"
    },
    "/management/holidays/add": {
      "filePath": "management.holidays.add.tsx",
      "parent": "/management/holidays"
    },
    "/management/terminals_/add": {
      "filePath": "management.terminals_.add.tsx",
      "parent": "/management"
    },
    "/vehicles_/$truckId/details": {
      "filePath": "vehicles_.$truckId.details.tsx"
    },
    "/working-hours_/$employeeId/work-shifts": {
      "filePath": "working-hours_.$employeeId.work-shifts.tsx",
      "children": [
        "/working-hours_/$employeeId/work-shifts/$workShiftId/details"
      ]
    },
    "/management/customer-sites_/$siteId/modify": {
      "filePath": "management.customer-sites_.$siteId.modify.tsx",
      "parent": "/management"
    },
    "/management/employees_/$employeeId/modify": {
      "filePath": "management.employees_.$employeeId.modify.tsx",
      "parent": "/management"
    },
    "/management/terminals_/$siteId/modify": {
      "filePath": "management.terminals_.$siteId.modify.tsx",
      "parent": "/management"
    },
    "/management/equipment_/towable/$towableId/modify": {
      "filePath": "management.equipment_.towable.$towableId.modify.tsx",
      "parent": "/management"
    },
    "/management/equipment_/truck/$truckId/modify": {
      "filePath": "management.equipment_.truck.$truckId.modify.tsx",
      "parent": "/management"
    },
    "/working-hours_/$employeeId/work-shifts/$workShiftId/details": {
      "filePath": "working-hours_.$employeeId.work-shifts.$workShiftId.details.tsx",
      "parent": "/working-hours_/$employeeId/work-shifts"
    }
  }
}
ROUTE_MANIFEST_END */
